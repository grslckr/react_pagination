{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","items","map","maxPageNumber","Math","ceil","length","firstItem","lastItem","isPrevDisabled","isNextDisabled","pageNumbers","filteredItems","filter","item","num","slice","className","cn","disabled","href","onClick","active","App","useState","itemsPerPage","setItemsPerPage","activePage","setActivePage","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAQX,EAAW,EAAGO,GACzBK,KAAI,SAAAR,GAAC,qBAAYA,MACdS,EAAgBC,KAAKC,KAAKJ,EAAMK,OAASR,GACzCS,EAAYT,GAAWC,EAAc,GAAK,EAC1CS,EAAWD,EAAYT,EAAU,EACjCW,EAAiC,IAAhBV,EACjBW,EAAiBX,IAAgBI,EAEjCQ,EAAcrB,EAAW,EAAGa,GAC5BS,EAAgBX,EAAMY,QAAO,SAAAC,GACjC,IAAMC,GAAOD,EAAKE,MAAM,GAExB,OAAQD,GAAOP,GAAYO,GAAOR,KAGpC,OACE,qCACE,qBAAIU,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBpB,IAFd,SAKE,mBACE,UAAQ,WACRkB,UAAU,YACVG,KAAK,QACL,gBAAeX,EACfY,QAAS,kBAAOZ,GAAkBT,EAAaD,EAAc,IAL/D,oBAUDY,EAAYT,KAAI,SAAAa,GAAG,OAClB,oBAAIE,UAAWC,IACb,YACA,CAAEI,OAAQvB,IAAgBgB,IAF5B,SAKE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAI,WAAML,GACVM,QAAS,kBAAMrB,EAAae,IAJ9B,SAMGA,SAIP,oBAAIE,UAAWC,IACb,YACA,CAAEC,SAAUhB,IAAkBJ,IAFhC,SAKE,mBACE,UAAQ,WACRkB,UAAU,YACVG,KAAK,QACL,gBAAeV,EACfW,QAAS,kBAAOX,GAAkBV,EAAaD,EAAc,IAL/D,uBAWJ,6BACGa,EAAcV,KACb,SAAAY,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAAwCA,GAAhBA,EAAKE,MAAM,aC7ExCO,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMrB,GAAakB,IAAiBE,EAAa,GAAK,EAChDnB,EAAWD,IAAakB,EAAe,EAE7C,OACE,sBAAKR,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWU,EADX,mBACgCpB,EADhC,cAC+CC,EAD/C,aAIA,sBAAKS,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRY,GAAG,kBACHZ,UAAU,eACVa,MAAOL,EACPM,SAAU,SAACC,GACTN,GAAiBM,EAAMC,OAAOH,OAC9BF,EAAc,IAPlB,UAUE,wBAAQE,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBjB,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEpB,MAAO,GACPC,QAAS2B,EACT1B,YAAa4B,EACb3B,aAAc4B,QC/CtBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4589113d.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const items = getNumbers(1, total)\n    .map(n => `Item ${n}`);\n  const maxPageNumber = Math.ceil(items.length / perPage);\n  const firstItem = perPage * (currentPage - 1) + 1;\n  const lastItem = firstItem + perPage - 1;\n  const isPrevDisabled = currentPage === 1;\n  const isNextDisabled = currentPage === maxPageNumber;\n\n  const pageNumbers = getNumbers(1, maxPageNumber);\n  const filteredItems = items.filter(item => {\n    const num = +item.slice(4);\n\n    return (num <= lastItem && num >= firstItem);\n  });\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isPrevDisabled}\n            onClick={() => !isPrevDisabled && onPageChange(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n        {pageNumbers.map(num => (\n          <li className={cn(\n            'page-item',\n            { active: currentPage === num },\n          )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${num}`}\n              onClick={() => onPageChange(num)}\n            >\n              {num}\n            </a>\n          </li>\n        ))}\n        <li className={cn(\n          'page-item',\n          { disabled: maxPageNumber === currentPage },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isNextDisabled}\n            onClick={() => !isNextDisabled && onPageChange(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {filteredItems.map(\n          item => <li data-cy=\"item\" key={item.slice(4)}>{item}</li>,\n        )}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [activePage, setActivePage] = useState(1);\n\n  const firstItem = +itemsPerPage * (+activePage - 1) + 1;\n  const lastItem = firstItem + +itemsPerPage - 1;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${activePage} (items ${firstItem} - ${lastItem} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => {\n              setItemsPerPage(+event.target.value);\n              setActivePage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={42}\n        perPage={itemsPerPage}\n        currentPage={activePage}\n        onPageChange={setActivePage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}